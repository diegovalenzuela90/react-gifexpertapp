{"version":3,"sources":["componets/AddCategory.js","componets/GifGridItem.js","helpers/getGifs.js","componets/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAGP,GAAH,mBAAkBO,OACrCN,EAAc,MAKlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAnBkB,SAACP,GAEvBF,EAAeE,EAAEQ,OAAOF,a,QCGjBG,EAVK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEzB,OACI,sBAAKC,UAAU,4CAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAIA,Q,uBCJHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAWF,GAF/C,+DAGDG,MAAMR,GAHL,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEUC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACtB,MAAM,CACEC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAV3C,kBAcAY,GAdA,4CAAH,sDCoCLM,EAjCC,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECFJ,SAACA,GAAc,IAAD,EAEhBpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAJ6B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KA4B1C,OArBAC,qBAAW,WAEXlB,EAAQC,GACPkB,MAAM,SAAAC,GAEHC,YAAY,WACRC,QAAQC,IAAIH,GACpBH,EAAS,CACLV,KAAKa,EACLL,SAAS,MAEN,UAMJ,CAACd,IAIGe,EDxByBQ,CAAcvB,GAAjCW,EAFmB,EAEzBL,KAAcQ,EAFW,EAEXA,QAOjB,OALJO,QAAQC,IAAIR,GAMR,qCACK,oBAAIlB,UAAU,wCAAd,SAAuDI,IAEnDc,GAAW,mBAAGlB,UAAU,mCAAb,qBAEhB,qBAAKA,UAAU,YAAf,SAGUe,EAAOH,KAAK,SAAAC,GAAG,OAEb,cAAC,EAAD,eAEKA,GADEA,EAAIC,aErBlBc,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,gBAFhB,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAU9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAGQ8C,EAAWjB,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAWA,GADLA,Y,MCpB9B0B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.000e40b4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setinputValue (e.target.value);\r\n    }\r\n\r\n    const handlesubmit = (e) => {\r\n        e.preventDefault(); // esta linea evita el refresc del navegador.\r\n        // console.log('Submit Hecho')\r\n        if (inputValue.trim().length > 2){\r\n            setCategories( cats=>[inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n\r\n    }\r\n    return (\r\n        <form onSubmit= {handlesubmit}>\r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={ handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({title, url}) => {\r\n    // console.log(title, url);\r\n    return (\r\n        <div className=\"animate__animated animate__bounce animate\">\r\n            <img src={ url } alt= {title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","\r\n\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI (category) }&limit=10&api_key=zk0kyuybZ6YvUE0NNC28vFICA75qmINV`\r\n    const resp= await fetch(url);\r\n    const { data } = await resp.json();\r\n    \r\n                const gifs = data.map( img => {\r\n                        return{\r\n                                id: img.id,\r\n                                title: img.title,\r\n                                url: img.images?.downsized_medium.url\r\n    \r\n                        }\r\n                })\r\n                return gifs;\r\n        }      \r\n    ","import React, {useState, useEffect} from 'react'\r\nimport GifGridItem from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\n\r\nconst GifGrid = ({category}) => {\r\n// const [images, setImages] = useState ([]);\r\nconst {data: images, loading}=  useFetchGifs( category );\r\n\r\nconsole.log(loading);\r\n\r\n\r\n\r\n\r\n    return (\r\n    <>\r\n         <h3 className=\"animate__animated animate__rubberBand\">{category}</h3>\r\n           \r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n        <div className=\"card-grid\">\r\n           \r\n            {\r\n                  images.map( img => (\r\n\r\n                    <GifGridItem \r\n                    key = {img.id}\r\n                    { ...img }\r\n                    />\r\n                   \r\n                    ))\r\n            }\r\n\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\nconst [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n});\r\n\r\nuseEffect (() =>{\r\n\r\ngetGifs(category)\r\n.then (imgs =>{\r\n\r\n    setTimeout( () => {\r\n        console.log(imgs)\r\nsetState({\r\n    data:imgs,\r\n    loading: false\r\n});\r\n    }, 3000);\r\n\r\n\r\n\r\n})\r\n\r\n}, [category])\r\n\r\n\r\n\r\nreturn state //{data: [], loading: true};\r\n\r\n}\r\n    // setTimeout(() => {\r\n    // setState ({\r\n        // data: [1,2,3,4,5,6,],\r\n        // loading: false\r\n    // })\r\n    // }, 3000);","\r\nimport React, { useState } from 'react';\r\nimport { AddCategory } from './componets/AddCategory';\r\nimport GifGrid from './componets/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n//         const handleAdd = ()=>{\r\n// // setCategories([...categories, 'HunterxHunter']);\r\n// setCategories( cats=>[...cats, 'HunterxHunter']);\r\n\r\n\r\n//         }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n                {/* <button onClick= {handleAdd}>Agregar</button> */}\r\n            <ol>\r\n\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid\r\n                        key= {category}\r\n                        category={ category}/>\r\n\r\n                        //<li key={ category} > { category } </li>\r\n                    )\r\n                }\r\n\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}